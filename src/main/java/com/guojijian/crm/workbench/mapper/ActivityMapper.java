package com.guojijian.crm.workbench.mapper;

import com.guojijian.crm.workbench.pojo.Activity;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Dec 09 16:22:57 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Dec 09 16:22:57 CST 2022
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件分页查询活动列表
     */
    List<Activity> selectActivityByConditionForPage(Map<String, Object> map);

    /**
     * 根据id值批量删除
     */
    int deleteActivityByIds(@Param("ids") String[] ids);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     * 根据id值查询活动
     * @mbggenerated Fri Dec 09 16:22:57 CST 2022
     */
    Activity selectActivityById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Dec 09 16:22:57 CST 2022
     */
    int updateActivityById(Activity activity);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Dec 09 16:22:57 CST 2022
     */
    List<Activity> selectAll();

    /**
     * 通过ids批量查询
     * @param ids
     * @return
     */
    List<Activity> selectActivityByIds(String[] ids);

    /**
     * 批量插入市场活动
     */
    int insertActivitys(List<Activity> activityList);

    /**
     * 通过id查询市场活动的详情
     * @param id
     * @return
     */
    Activity selectActivityDetailById(String id);

    /**
     * 根据线索id查询所有关联的活动
     * @param clueId
     * @return
     */
    List<Activity> selectActivityForDetailByClueId(String clueId);

    /**
     * 根据市场活动名称模糊查询未关联的市场活动
     */
    List<Activity> selectActivityNoBundByName(@Param("name") String name,@Param("clueId") String clueId);

    /**
     * 根据市场活动名称模糊查询关联的市场活动
     */
    List<Activity> selectActivityForBundByName(Map<String,Object> map);

    /**
     * 根据活动名称模糊查询市场活动的部分信息
     */
    List<Activity> selectActivityForPartInfoByName(String name);

    /**
     * 通过id查询市场活动名称
     */
    String selectActivityNameById(String id);
}