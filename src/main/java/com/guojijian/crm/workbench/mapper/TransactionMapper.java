package com.guojijian.crm.workbench.mapper;

import com.guojijian.crm.commons.pojo.FunnelVN;
import com.guojijian.crm.workbench.pojo.Transaction;
import java.util.List;
import java.util.Map;

public interface TransactionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sat Jan 07 09:51:42 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sat Jan 07 09:51:42 CST 2023
     */
    List<Transaction> selectAll();

    /**
     * 添加新交易
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sat Jan 07 09:51:42 CST 2023
     */
    int insert(Transaction transaction);

    /**
     * 根据条件分页查询交易
     * @return
     */
    List<Transaction> selectTranForPageByCondition(Transaction transaction);

    /**
     * 根据ids批量删除交易
     * @param ids
     * @return
     */
    int deleteTranByIds(String[] ids);


    /**
     * 修改交易
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sat Jan 07 09:51:42 CST 2023
     */
    int updateTran(Transaction transaction);


    /**
     * 根据id查询交易的编辑信息
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sat Jan 07 09:51:42 CST 2023
     */
    Transaction selectTranForEditById(String id);

    /**
     * 根据id查询交易的详细信息
     * @return
     */
    Transaction selectTranForDetailById(String id);

    /**
     * 分组查询各阶段对应的交易量
     */
    List<FunnelVN> selectTranCountGroupByStage();

    /**
     * 根据交易id修改阶段
     */
    int updateTranStageById(Transaction transaction);
}